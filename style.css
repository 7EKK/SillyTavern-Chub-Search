.list-and-search-wrapper {
    display: flex;
    flex-direction: column;
    height: 100%;  /* Adjust as needed. If this is a popup, it might be set to a fixed height. */
}

.character-list-popup {
    flex-grow: 1;
    overflow-y: auto;  /* This ensures that if the list grows too long, it becomes scrollable. */
}


.character-list-item {
    display: flex;
    align-items: center;  /* aligns items vertically in the middle */
    margin: 10px 0;      /* space between each list item */
    justify-content: space-between;  /* pushes content to the far edges */
    max-width: 80vw;
}

.character-list-item img.thumbnail {
    flex: 0 0 100px; /* this gives a fixed width of 100px to thumbnails, adjust as needed */
    height: 100px;  /* adjust height as needed */
    object-fit: cover;
    margin-right: 10px; /* space between thumbnail and description */
}

body img.thumbnail {
    width: 100px;  /* adjust width as needed */
    height: 100px;  /* adjust height as needed */
    object-fit: cover;
    margin-right: 10px; /* space between thumbnail and description */
}

.character-list-item .info {
    flex: 1;  /* allows the description to take up the rest of the space */
    text-align: left;  /* aligns content to the left */
    overflow: hidden;  /* in case of long text */
}


.character-list-item .info .name {
    font-weight: bold;  /* Makes the name stand out */
    margin-bottom: 5px;
    text-align: left;  /* aligns content to the left */
    /* don't change the color due to it being a link */
    color: var(--SmartThemeBodyColor)
}

.character-list-item .info .name a{
    color: var(--SmartThemeBodyColor)
}

.character-list-item .info .description {
    color: #666;  /* Darkens the description text slightly */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;  /* Ensures that long descriptions end in an ellipsis */
    text-align: left;  /* aligns content to the left */
    text-decoration: none;  /* Remove default link underline */
    display: block;  /* Make it behave like a block element */
}

.character-list-item .info .description:hover {
    color: #007bff;  /* Change color on hover to indicate it's clickable */
    text-decoration: underline;  /* Add underline on hover */
}

.character-list-item .info .tags{
    margin-top: 10px;
}

/* Selected tag styling */
.character-list-item .tag-selected {
    background-color: #007bff !important;
    color: white !important;
    border: 1px solid #0056b3 !important;
}

.character-list-item .tag-selected:hover {
    background-color: #0056b3 !important;
}

.character-list-item .info .author {
    font-size: 0.8em; /* This makes the author text 80% of its original size. Adjust as needed. */
    color: var(--SmartThemeEmColor)
}

.character-list-item .info .character-header {
    display: flex;
    flex-direction: column;
    margin-bottom: 5px;
}

.character-list-item .info .character-stats {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 5px;
    font-size: 0.8em;
    color: var(--SmartThemeEmColor);
}

.character-list-item .info .character-stats span {
    background-color: var(--SmartThemeBorderColor);
    padding: 2px 6px;
    border-radius: 3px;
    white-space: nowrap;
}

.character-list-item .info .rating {
    color: #ffa500;
    font-weight: bold;
}

.character-list-item .info .verified-badge {
    background-color: #4CAF50;
    color: white;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.7em;
    margin-left: 5px;
}

.character-list-item .info .recommended-badge {
    background-color: #2196F3;
    color: white;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.7em;
    margin-left: 5px;
}

/* Hover tooltip styles for translated content */
.character-list-item .name[title],
.character-list-item .description[title],
.character-list-item .tag[title] {
    position: relative;
    cursor: help;
}

.character-list-item .name[title]:hover,
.character-list-item .description[title]:hover,
.character-list-item .tag[title]:hover {
    background-color: rgba(255, 255, 0, 0.1);
    border-radius: 2px;
}

/* Style for translated tags to make them more visible */
.character-list-item .tag[title] {
    border: 1px dashed rgba(255, 165, 0, 0.3);
    background-color: rgba(255, 165, 0, 0.05);
}

.page-buttons {
    align-content: center;
    align-items: center;
    justify-content: space-between;
}

.list-and-search-wrapper .flex-container {
    display: flex;
}

.list-and-search-wrapper .flex-align-center {
    align-items: center;
}

/* Centering labels in relation to adjacent inputs or icons */
.list-and-search-wrapper .flex-container label {
    align-self: center;
}
/* Grey out the entire list when searching */
.searching {
    filter: grayscale(100%);
}

/* API Configuration Icon */
#apiConfigIcon {
    font-size: 16px;
    color: #666;
    transition: color 0.3s ease;
    padding: 5px;
    border-radius: 3px;
}

#apiConfigIcon:hover {
    color: #007bff;
    background-color: rgba(0, 123, 255, 0.1);
}

/* API Configuration Container */
.api-config-container {
    margin-top: 10px;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

/* API Configuration Tags Layout */
.api-config-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
}

.api-config-tag {
    display: flex;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    padding: 5px 10px;
    white-space: nowrap;
}

.api-config-tag label {
    margin-right: 8px;
    font-size: 0.9em;
    color: #ccc;
    margin-bottom: 0;
}

.api-config-input {
    background: transparent;
    border: none;
    outline: none;
    color: var(--SmartThemeBodyColor);
    font-size: 0.9em;
    min-width: 200px;
    max-width: 300px;
}

.api-config-input::placeholder {
    color: #888;
    font-size: 0.8em;
}

/* Search Tags Layout */
.search-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
    margin-bottom: 15px;
}

.search-tag {
    display: flex;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 20px;
    padding: 8px 12px;
    white-space: nowrap;
    min-width: 200px;
    flex: 1;
}

.search-tag-main {
    min-width: 300px;
    flex: 2;
}

.search-tag label {
    margin-right: 8px;
    color: #ccc;
    margin-bottom: 0;
    font-size: 0.9em;
}

.search-input {
    background: transparent;
    border: none;
    outline: none;
    color: var(--SmartThemeBodyColor);
    font-size: 0.9em;
    flex: 1;
    min-width: 120px;
}

.search-input::placeholder {
    color: #888;
    font-size: 0.8em;
}

/* Responsive Design */
@media (max-width: 768px) {
    .search-tags {
        flex-direction: column;
        align-items: stretch;
    }
    
    .search-tag {
        min-width: auto;
        flex: none;
        width: 100%;
    }
    
    .search-tag-main {
        min-width: auto;
        flex: none;
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .search-tags {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
    }
    
    .search-tag-main {
        grid-column: 1 / -1;
    }
}

@media (min-width: 1025px) {
    .search-tags {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        gap: 10px;
    }
}

/* Page input styling */
.page-input {
    width: 40px !important;
    min-width: 40px !important;
    max-width: 60px !important;
    text-align: center;
}